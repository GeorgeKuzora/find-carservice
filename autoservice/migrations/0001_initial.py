# Generated by Django 3.2.16 on 2023-09-19 18:33

import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cars', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(help_text='Укажите адрес автосервиса', max_length=250, verbose_name='Адрес автосервиса')),
                ('rating', models.PositiveSmallIntegerField(help_text='Укажите рейтинг автосервиса', validators=[django.core.validators.MinValueValidator(1, message='Оценка ниже 1 невозможна'), django.core.validators.MaxValueValidator(5, message='Оценка выше 5 невозможна')], verbose_name='Рейтинг автосервиса')),
                ('votes', models.PositiveSmallIntegerField(help_text='Укажите количество отзывов на автосервис', verbose_name='Количество отзывов автосервиса')),
                ('openfrom', models.TextField(help_text='Введите время начала рабочего дня автосервиса в формате HH:MM', max_length=4, null=True, unique=True, validators=[django.core.validators.RegexValidator('^#[0-9]{2}:[0-9]{2}$', 'Используйте RGB-формат для указания цвета (#AABBCC)')], verbose_name='Начало работы')),
                ('openuntil', models.TextField(help_text='Введите время окончания рабочего дня автосервиса в формате HH:MM', max_length=4, null=True, unique=True, validators=[django.core.validators.RegexValidator('^#[0-9]{2}:[0-9]{2}$', 'Используйте RGB-формат для указания цвета (#AABBCC)')], verbose_name='Окончание рабочего дня')),
                ('holidays', models.CharField(choices=[('1', 'Понедельник'), ('2', 'Вторник'), ('3', 'Среда'), ('4', 'Четверг'), ('5', 'Пятница'), ('6', 'Суббота'), ('7', 'Воскресенье')], help_text='Укажите выходной день', max_length=1, verbose_name='Выходной день')),
                ('phone_number', models.TextField(help_text='Введите время окончания рабочего дня автосервиса в формате HH:MM', max_length=12, null=True, unique=True, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,12}$', message="Ошибка ввода, используйте формат: '+999999999'")], verbose_name='Номер телефона')),
                ('email', models.EmailField(error_messages={'unique': 'Автосервис с такой почтой уже существует'}, help_text='Введите адрес электронной почты', max_length=80, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='Электронная почта')),
                ('car_service', models.ManyToManyField(help_text='Выберите автомобильные бренды', related_name='autoservices', to='cars.Transport', verbose_name='Автомобильные бренды')),
            ],
            options={
                'verbose_name': 'Автосервис',
                'verbose_name_plural': 'Автосервис',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Укажите название компании', max_length=250, verbose_name='Название компании по ремонту')),
                ('description', models.TextField(verbose_name='Описание компании')),
                ('logo', models.ImageField(null=True, upload_to='autoservice/images/logo', verbose_name='Логотип компании')),
                ('legal_address', models.CharField(max_length=250, verbose_name='Юридический адрес')),
            ],
            options={
                'verbose_name': 'Компания по ремонту авто',
                'verbose_name_plural': 'Компания по ремонту авто',
            },
        ),
        migrations.CreateModel(
            name='GeolocationAutoService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(verbose_name='Значение северной широты на карте')),
                ('longitude', models.FloatField(verbose_name='Значение восточной долготы на карте')),
            ],
        ),
        migrations.CreateModel(
            name='GeolocationCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(verbose_name='Значение северной широты на карте')),
                ('longitude', models.FloatField(verbose_name='Значение восточной долготы на карте')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название работы')),
                ('description', models.CharField(max_length=150, verbose_name='Описание работы')),
            ],
            options={
                'verbose_name': 'Работа',
                'verbose_name_plural': 'Работы',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rus_name', models.CharField(max_length=255, verbose_name='Город на русском языке')),
                ('geolocation', models.ForeignKey(help_text='Укажите геолокацию города', on_delete=django.db.models.deletion.CASCADE, to='autoservice.geolocationcity', verbose_name='Геолокация города')),
            ],
        ),
        migrations.CreateModel(
            name='AutoserviceJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.CharField(max_length=5, verbose_name='Относительная стоимость работ')),
                ('job', models.ForeignKey(help_text='Выберите необходимый тип работ', on_delete=django.db.models.deletion.CASCADE, to='autoservice.job', verbose_name='Тип работы автосервиса')),
                ('service', models.ForeignKey(help_text='Выберите автосервис', on_delete=django.db.models.deletion.CASCADE, to='autoservice.autoservice', verbose_name='Автосервис')),
            ],
        ),
        migrations.AddField(
            model_name='autoservice',
            name='city',
            field=models.ForeignKey(help_text='Укажите город', on_delete=django.db.models.deletion.CASCADE, to='autoservice.city', verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='autoservice',
            name='company',
            field=models.ForeignKey(help_text='Выберите компанию', on_delete=django.db.models.deletion.CASCADE, to='autoservice.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='autoservice',
            name='geolocation',
            field=models.ForeignKey(help_text='Укажите геолокацию автосервиса', on_delete=django.db.models.deletion.CASCADE, to='autoservice.geolocationautoservice', verbose_name='Геолокация автосервиса'),
        ),
        migrations.AddField(
            model_name='autoservice',
            name='job',
            field=models.ManyToManyField(help_text='Выберите необходимый тип работ', through='autoservice.AutoserviceJob', to='autoservice.Job', verbose_name='Работы'),
        ),
    ]
