# Generated by Django 3.2.16 on 2023-09-20 17:16

import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'Пользователь с таким именем уже существует'}, help_text='Введите уникальное имя пользователя. Максимум 40 символов.Используйте только английские буквы, цифры и символы @/./+/-/_', max_length=40, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='Имя пользователя')),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'Пользователь с такой почтой уже существует'}, help_text='Введите адрес электронной почты', max_length=80, null=True, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='Электронная почта')),
                ('telegram_id', models.PositiveIntegerField(blank=True, null=True, unique=True, verbose_name='Идентификатор телеграма')),
                ('last_name', models.CharField(help_text='Введите фамилию', max_length=40, verbose_name='Фамилия')),
                ('first_name', models.CharField(help_text='Введите имя', max_length=40, verbose_name='Имя')),
                ('phone_number', models.CharField(help_text='Введите номер телефона', max_length=11, unique=True, validators=[django.core.validators.RegexValidator('^(\\+7|8)[0-9]{10}$', "Введите номер телефона в формате: '+79995553322'")])),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('image', models.ImageField(default=False, help_text='Выберите картинку профиля', upload_to='users/images/', verbose_name='Картинка')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Категория пользователя')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Верификация профиля')),
                ('is_active', models.BooleanField(default=False, verbose_name='Статус пользователя')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'auth_user',
                'ordering': ('email',),
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
    ]
